stack<int> s;
        vector<int> v;
        for(int i=0;i<nums1.size();i++)
        {
            for(int j=0;j<nums2.size();j++)
            {
                if(nums2[j]==nums1[i])
                {
                    for(int k=nums2.size();k>j;k--)
                    { 
                    if(s.size()==0) v.push_back(-1);
                    if(s.size()>0 && s.top()>nums2[j]) v.push_back(s.top());
                    else if(s.size()>0 && s.top()<nums2[j])
                    {
                        while(s.size()>0 && s.top()<nums2[j])
                            s.pop();
                        if(s.size()==0) v.push_back(-1);
                        else v.push_back(s.top());
                    }
                        s.push(nums2[k]);
                    }
                   }
                s.clear();
            }
        }
    
        return v;

        string removeOuterParentheses(string s) {
        int count1=0, count2=0;
        vector<char> v;
        string ans;
        for(int i=0;i<s.size();i++)
        {
            if(s[i]=='(')
            {
                count1++;
                if(count1!=1)
                {
                    cout<<s[i];
                    v.push_back(s[i]);
                }
            }
            
            else if(s[i]==')')
            {
                count2++;
                if(count2!=count1)
                {
                    cout<<s[i];
                    v.push_back(s[i]);
                }
                else if(count1==count2)
                    count1=count2=0;
            }
        }
        cout<<endl;
        for(int j=0;j<v.size();j++)
        {
            ans[j]=ans[j]+v[j];
            cout<<ans[j];
        }
       
        cout<<endl;
        cout<<ans;
        return ans;
    }
};